// Dark Mode Toggle for Desktop 
const themeToggleDesktop = document.getElementById('theme-toggle-desktop');const sunIconDesktop = document.getElementById('sun-icon-desktop');const moonIconDesktop = document.getElementById('moon-icon-desktop');

// Dark Mode Toggle for Mobile 
const themeToggleMobile = document.getElementById('theme-toggle-mobile');const sunIconMobile = document.getElementById('sun-icon-mobile');const moonIconMobile = document.getElementById('moon-icon-mobile');

// Function to toggle dark mode 
function toggleDarkMode(){document.body.classList.toggle('dark-mode');const isDarkMode = document.body.classList.contains('dark-mode');localStorage.setItem('dark-mode',isDarkMode);

// Toggle icons for desktop 
sunIconDesktop.style.display = isDarkMode ? 'none':'block';moonIconDesktop.style.display = isDarkMode ? 'block':'none';

// Toggle icons for mobile 
sunIconMobile.style.display = isDarkMode ? 'none':'block';moonIconMobile.style.display = isDarkMode ? 'block':'none';}

// Add event listeners 
themeToggleDesktop.addEventListener('click',toggleDarkMode);themeToggleMobile.addEventListener('click',toggleDarkMode);

// Check for saved dark mode preference 
const savedDarkMode = localStorage.getItem('dark-mode');if(savedDarkMode === 'true'){document.body.classList.add('dark-mode');sunIconDesktop.style.display = 'none';moonIconDesktop.style.display = 'block';sunIconMobile.style.display = 'none';moonIconMobile.style.display = 'block';}else{sunIconDesktop.style.display = 'block';moonIconDesktop.style.display = 'none';sunIconMobile.style.display = 'block';moonIconMobile.style.display = 'none';}

// Hamburger Menu Toggle 
const hamburger = document.querySelector('.hamburger');const navMenu = document.querySelector('header nav ul');hamburger.addEventListener('click',()=>{navMenu.classList.toggle('active');});

//contact form 
document.getElementById("contactForm").addEventListener("submit",function(event){event.preventDefault();

// Prevent form submission 

// Get input values 
let name = document.getElementById("name").value;let email = document.getElementById("email").value;let message = document.getElementById("message").value;

// Construct the mailto link 
let subject = encodeURIComponent("New Contact Form Message from " + name);let body = encodeURIComponent("Name:" + name + "\nEmail:" + email + "\n\nMessage:\n" + message);let mailtoLink = `mailto:itsshivaes@gmail.com?subject=${subject}&body=${body}`;

// Open the user's email app 
window.location.href = mailtoLink;});

// Preloader
window.addEventListener("load",function(){setTimeout(()=>{document.getElementById("preloader").classList.add("hidden")},300);});

// GitHub Repo Fetch
//username
const username="itsshivaes";
// process
async function fetchRepositories(){try{const response=await fetch(`https://api.github.com/users/${username}/repos`),repos=await response.json();const repoList=document.getElementById("repo-list");repos.forEach(repo=>{const repoItem=document.createElement("li");repoItem.classList.add("repo-item");const repoLink=document.createElement("a");repoLink.href=repo.html_url,repoLink.target="_blank",repoLink.textContent=repo.name;const repoDescription=document.createElement("p");repoDescription.classList.add("repo-description"),repoDescription.textContent=repo.description||"No description provided.";const repoStats=document.createElement("div");repoStats.classList.add("repo-stats");const stars=document.createElement("span");stars.textContent=`‚≠ê ${repo.stargazers_count}`;const forks=document.createElement("span");forks.textContent=`üç¥ ${repo.forks_count}`,repoStats.appendChild(stars),repoStats.appendChild(forks),repoItem.appendChild(repoLink),repoItem.appendChild(repoDescription),repoItem.appendChild(repoStats),repoList.appendChild(repoItem)})}catch(error){console.error("Error fetching repositories:",error)}}fetchRepositories();
